--SPLIT UP BETWEEN COMPARTMENTS AND ADD UNIQUE IDENTIFIER
DROP TABLE IF EXISTS #GROUP;
SELECT 
col
, LEN(col) colLEN
, LEFT(col,LEN(col)/2) comp1
, RIGHT(col, LEN(col)/2) comp2
, ROW_NUMBER() OVER (ORDER BY (SELECT 1)) Backpack
, CEILING(ROW_NUMBER() OVER (ORDER BY (SELECT 1)) / 3 ) Gr
INTO #GROUP
FROM #DATA

SELECT * FROM #GROUP

--RECURSIVE CTE TO SPLIT UP EACH LETTER ON NEW ROW FOR EACH COMPARTMENT
DROP TABLE IF EXISTS #SPLIT
;WITH CTE AS 
(
SELECT T.Backpack, STUFF(T.comp1,1,1,'') STF, LEFT(T.comp1,1) Col1, STUFF(T.comp2,1,1,'') STF2, LEFT(T.comp2,1) Col2
FROM #GROUP T
UNION ALL
SELECT Backpack, STUFF(STF,1,1,'') STF, LEFT(STF,1) Col1, STUFF(STF2,1,1,'') STF2, LEFT(STF2,1) Col2 FROM CTE
WHERE LEN(STF) > 0
)
SELECT
Backpack, Col1, Col2
INTO #SPLIT
FROM CTE

--JOIN COMPARTMENTS TOGETHER GET THE TYPES NEEDED -> CASE TO GET THE POINTS
DROP TABLE IF EXISTS #PRI
SELECT DISTINCT
A.Backpack
,A.Col1
,CASE WHEN A.Col1 =  'a'	THEN 1
	  WHEN A.Col1 =  'b'	THEN 2
	  WHEN A.Col1 =  'c'	THEN 3
	  WHEN A.Col1 =  'd'	THEN 4
	  WHEN A.Col1 =  'e'	THEN 5
	  WHEN A.Col1 =  'f'	THEN 6
	  WHEN A.Col1 =  'g'	THEN 7
	  WHEN A.Col1 =  'h'	THEN 8
	  WHEN A.Col1 =  'i'	THEN 9
	  WHEN A.Col1 =  'j'	THEN 10
	  WHEN A.Col1 =  'k'	THEN 11
	  WHEN A.Col1 =  'l'	THEN 12
	  WHEN A.Col1 =  'm'	THEN 13
	  WHEN A.Col1 =  'n'	THEN 14
	  WHEN A.Col1 =  'o'	THEN 15
	  WHEN A.Col1 =  'p'	THEN 16
	  WHEN A.Col1 =  'q'	THEN 17
	  WHEN A.Col1 =  'r'	THEN 18
	  WHEN A.Col1 =  's'	THEN 19
	  WHEN A.Col1 =  't'	THEN 20
	  WHEN A.Col1 =  'u'	THEN 21
	  WHEN A.Col1 =  'v'	THEN 22
	  WHEN A.Col1 =  'W'	THEN 23
	  WHEN A.Col1 =  'X'	THEN 24
	  WHEN A.Col1 =  'Y'	THEN 25
	  WHEN A.Col1 =  'z'	THEN 26
	  END 
-- ADDED IIF HERE TO CHECK IF UPPERCASE AND ADD 26 IF IT IS
	  + IIF(UNICODE(A.Col1) <> UNICODE(LOWER(A.Col1)),26,0)
	  Pri
INTO #PRI
FROM #SPLIT A
	INNER JOIN #SPLIT B
		ON A.Backpack = B.Backpack
		AND A.Col1 = B.Col2 COLLATE Latin1_General_100_CS_AS 
ORDER BY Backpack

SELECT SUM(Pri)
FROM #PRI

